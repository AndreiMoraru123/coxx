name: C++23 | GCC 14 | Bazel | Linux

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  setup:
    runs-on: ubuntu-latest
    container:
      image: gcc:14
    steps:
      - name: Install dependencies
        run: apt-get update && apt-get install -y clang-tidy clang-format sudo
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Bazelisk
        uses: philwo/setup-bazelisk@v1
      - name: Set Git safe directory
        run: git config --global --add safe.directory /__w/coxx/coxx
      - name: Create Bazel cache directory
        run: mkdir -p ~/.cache/bazel
      - name: Cache Bazel
        uses: actions/cache@v3
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('**/WORKSPACE') }}
          restore-keys: |
            ${{ runner.os }}-bazel-

  format:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: gcc:14
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Bazel cache directory
        run: mkdir -p ~/.cache/bazel
      - name: Create and switch to non-root user
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
          chown -R builder:builder .
      - name: Format code with Clang-Format
        run: |
          su builder -c 'find . -name "*.cxx" -o -name "*.hxx" -o -name "*.c" -o -name "*.h" | xargs clang-format -i'
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          if ! git diff --quiet && ! git diff --staged --quiet; then
            git commit -m "Apply clang-format changes"
            git push "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:${{ github.ref }}
          fi

  build:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: gcc:14
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Bazel cache directory
        run: mkdir -p ~/.cache/bazel
      - name: Cache Bazel
        uses: actions/cache@v3
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('**/WORKSPACE') }}
      - name: Create and switch to non-root user
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
          chown -R builder:builder .
      - name: Build project with GCC 14
        run: su builder -c 'bazel build --cxxopt="-std=c++23" //...'

  lint:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: gcc:14
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Bazel cache directory
        run: mkdir -p ~/.cache/bazel
      - name: Cache Bazel
        uses: actions/cache@v3
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('**/WORKSPACE') }}
      - name: Create and switch to non-root user
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
          chown -R builder:builder .
      - name: Generate compile_commands.json
        run: su builder -c 'bazel run @hedron_compile_commands//:refresh_all -- --cxxopt="-std=c++23"'
      - name: Run Clang-Tidy over the project & suppress failure
        run: su builder -c 'clang-tidy -p=. $(find . -name "*.cxx" -o -name "*.hxx") || true'

  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: gcc:14
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Bazel cache directory
        run: mkdir -p ~/.cache/bazel
      - name: Cache Bazel
        uses: actions/cache@v3
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('**/WORKSPACE') }}
      - name: Create and switch to non-root user
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
          chown -R builder:builder .
      - name: Run tests with GCC 14
        run: su builder -c 'bazel test --cxxopt="-std=c++23" //...'
