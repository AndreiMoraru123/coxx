name: C++23 | GCC 14 | Bazel | Linux

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    container:
      image: gcc:14

    steps:
      - name: Install Clang-Tidy & Clang-Format
        run: apt-get update && apt-get install -y clang-tidy clang-format sudo

      - name: Create non-root user
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Bazelisk
        uses: philwo/setup-bazelisk@v1

      - name: Switch to non-root user
        run: |
          chown -R builder:builder .
          su builder

      - name: Format code with Clang-Format
        run: su builder -c 'find . -name "*.cxx" -o -name "*.hxx" -o -name "*.c" -o -name "*.h" | xargs clang-format -i'

      - name: Build project with GCC 14
        run: su builder -c 'bazel build --cxxopt='-std=c++23' //...'

      - name: Generate compile_commands.json
        run: su builder -c 'bazel run @hedron_compile_commands//:refresh_all -- --cxxopt="-std=c++23"'

      - name: Run Clang-Tidy over the project & supress failure
        run: su builder -c 'clang-tidy -p=. $(find . -name "*.cxx" -o -name "*.hxx") || true'

      - name: Run tests with GCC 14
        run: su builder -c 'bazel test --cxxopt="-std=c++23" //...'
